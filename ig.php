<?php
date_default_timezone_set('Asia/Ho_Chi_Minh');

// üåà Rainbow ch·ªØ t·ª´ng k√Ω t·ª±
function rainbow_text($text) {
    $colors = [31, 33, 32, 36, 34, 35, 91];
    foreach (mb_str_split($text) as $i => $char) {
        $color = $colors[$i % count($colors)];
        echo "\033[1;{$color}m$char\033[0m";
        usleep(50000);
    }
 }


function bes4($url) {
    try {
        $response = file_get_contents($url, false, stream_context_create([
            'http' => ['timeout' => 5]
        ]));
        
        if ($response !== false) {
            $doc = new DOMDocument();
            @$doc->loadHTML($response);
            $xpath = new DOMXPath($doc);
            
            $version_tag = $xpath->query("//span[@id='version_keyADB']")->item(0);
            $maintenance_tag = $xpath->query("//span[@id='maintenance_keyADB']")->item(0);
            
            $version = $version_tag ? trim($version_tag->nodeValue) : null;
            $maintenance = $maintenance_tag ? trim($maintenance_tag->nodeValue) : null;
            
            return array($version, $maintenance);
        }
    } catch (Exception $e) {
        return array(null, null);
    }
    return array(null, null);
}


system('clear');
// H√†m hi·ªÉn th·ªã banner

if (!function_exists('banner')) {
    function banner() {
        system('clear');
        $banner = "
                                   \033[1;36m   ¬© B·∫£n Quy·ªÅn Thu·ªôc PhuocAn 
                      
     \033[1;31m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó                                            
     \033[1;32m‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë                         
     \033[1;33m‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë                           
     \033[1;36m‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó                      
     \033[1;39m‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù  ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù 
\033[1;39m‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
\033[1;39m‚ïë‚ñ∂ Nh√≥m   :  https://zalo.me/g/mprgxe166        ‚ïë
\033[1;39m‚ïë‚ñ∂ FaceBook : facebook.com/phuocan.9999         ‚ïë
\033[1;39m‚ïë‚ñ∂ Youtube : youtube.com/@phuocan.9999          ‚ïë
\033[1;39m‚ïë‚ñ∂ Zalo : 0915.948.201                          ‚ïë
\033[1;39m‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
        ";
        foreach (str_split($banner) as $X) {
            echo $X;
            usleep(1250);
        }
    }
}


banner();
echo "\n";
echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
// In menu l·ª±a ch·ªçn
echo "\033[1;32mNh·∫≠p \033[1;31m[\033[1;33m1\033[1;31m]\033[1;32m V√†o Tool Golike Instagram Cookie\n"; 
echo "\033[1;32mNh·∫≠p \033[1;31m[\033[1;33m2\033[1;31m]\033[1;32m Nh·∫≠p Authorization Golike M·ªõi\n";

// V√≤ng l·∫∑p ƒë·ªÉ ch·ªçn l·ª±a ch·ªçn (X·ª≠ l√Ω c·∫£ tr∆∞·ªùng h·ª£p ch·ªçn sai)
while (true) {
    try {
        echo "\033[1;32mNh·∫≠p L·ª±a Ch·ªçn : ";
        $choose = trim(fgets(STDIN));
        $choose = intval($choose);
        if ($choose != 1 && $choose != 2) {
            echo "\033[1;31m\n‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! H√£y nh·∫≠p l·∫°i.\n";
            continue;
        }
        break;
    } catch (Exception $e) {
        echo "\033[1;31mSai ƒë·ªãnh d·∫°ng! Vui l√≤ng nh·∫≠p s·ªë.\n";
    }
}

// X√≥a Authorization n·∫øu ch·ªçn 2
if ($choose == 2) {
    $file = "Authorization.txt";
    if (file_exists($file)) {
        if (unlink($file)) {
            echo "\033[1;32m[‚úî] ƒê√£ x√≥a $file!\n";
        } else {
            echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ x√≥a $file!\n";
        }
    } else {
        echo "\033[1;33m[!] File $file kh√¥ng t·ªìn t·∫°i!\n";
    }
    echo "\033[1;33müëâ Vui l√≤ng nh·∫≠p l·∫°i th√¥ng tin!\n";
}

// Ki·ªÉm tra v√† t·∫°o file n·∫øu ch∆∞a c√≥
$file = "Authorization.txt";
if (!file_exists($file)) {
    if (file_put_contents($file, "") === false) {
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ t·∫°o file $file!\n";
        exit(1);
    }
}

// ƒê·ªçc th√¥ng tin t·ª´ file
$author = "";
if (file_exists($file)) {
    $author = file_get_contents($file);
    if ($author === false) {
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ ƒë·ªçc file $file!\n";
        exit(1);
    }
    $author = trim($author);
}

// Y√™u c·∫ßu nh·∫≠p l·∫°i n·∫øu Authorization tr·ªëng
while (empty($author)) {
    echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
    echo "\033[1;32mNh·∫≠p Authorization: ";
    $author = trim(fgets(STDIN));

    // Ghi v√†o file
    if (file_put_contents($file, $author) === false) {
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ ghi v√†o file $file!\n";
        exit(1);
    }
}

// Ch·∫°y tool
$headers = [
    'Accept-Language' => 'vi,en-US;q=0.9,en;q=0.8',
    'Referer' => 'https://app.golike.net/',
    'Sec-Ch-Ua' => '"Not A(Brand";v="99", "Google Chrome";v="121", "Chromium";v="121"',
    'Sec-Ch-Ua-Mobile' => '?0',
    'Sec-Ch-Ua-Platform' => "Windows",
    'Sec-Fetch-Dest' => 'empty',
    'Sec-Fetch-Mode' => 'cors',
    'Sec-Fetch-Site' => 'same-site',
    'T' => 'VFZSak1FMTZZM3BOZWtFd1RtYzlQUT09',
    'User-Agent' => 'Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Mobile Safari/537.36',
    "Authorization" => $author,
    'Content-Type' => 'application/json;charset=utf-8'
];

echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
rainbow_text(">> ƒêang v√†o tool... <<\n");
sleep(1);

// H√†m ch·ªçn t√†i kho·∫£n Instagram
function chonacc() {
    global $headers;
    $json_data = array();
    $response = file_get_contents('https://gateway.golike.net/api/instagram-account', false, stream_context_create([
        'http' => [
            'method' => 'GET',
            'header' => buildHeaders($headers),
            'content' => json_encode($json_data)
        ]
    ]));
    return json_decode($response, true);
}

// H√†m nh·∫≠n nhi·ªám v·ª•
function nhannv($account_id) {
    global $headers;
    $params = array(
        'instagram_account_id' => $account_id,
        'data' => 'null'
    );
    $json_data = array();
    $url = 'https://gateway.golike.net/api/advertising/publishers/instagram/jobs?' . http_build_query($params);
    $response = file_get_contents($url, false, stream_context_create([
        'http' => [
            'method' => 'GET',
            'header' => buildHeaders($headers),
            'content' => json_encode($json_data)
        ]
    ]));
    return json_decode($response, true);
}

// H√†m ho√†n th√†nh nhi·ªám v·ª•
// ·∫®n t·∫•t c·∫£ l·ªói v√† c·∫£nh b√°o PHP
error_reporting(0);
ini_set('display_errors', 0);

function hoanthanh($ads_id, $account_id) {
    global $headers;
    
    $json_data = array(
        'instagram_users_advertising_id' => $ads_id,
        'instagram_account_id' => $account_id,
        'async' => true,
        'data' => null
    );

    $context = stream_context_create([
        'http' => [
            'method' => 'POST',
            'header' => buildHeaders($headers),
            'content' => json_encode($json_data),
            'ignore_errors' => true // Kh√¥ng hi·ªÉn th·ªã l·ªói c·ªßa file_get_contents
        ]
    ]);

    $response = @file_get_contents('https://gateway.golike.net/api/advertising/publishers/instagram/complete-jobs', false, $context);

    if ($response === false) {
        return ['error' => 'Kh√¥ng th·ªÉ k·∫øt n·ªëi ƒë·∫øn server!'];
    }

    // L·∫•y m√£ HTTP t·ª´ ph·∫£n h·ªìi
    $http_code = 0;
    if (isset($http_response_header) && preg_match('/HTTP\/\d\.\d\s(\d+)/', $http_response_header[0], $matches)) {
        $http_code = (int)$matches[1];
    }

    // Tr·∫£ v·ªÅ l·ªói n·∫øu m√£ HTTP kh√¥ng ph·∫£i 200
    if ($http_code !== 200) {
        return ['error' => "L·ªói HTTP $http_code"];
    }

    return json_decode($response, true);
}

// H√†m b√°o l·ªói
function baoloi($ads_id, $object_id, $account_id, $loai) {
    global $headers;
    
    $json_data1 = array(
        'description' => 'T√¥i ƒë√£ l√†m Job n√†y r·ªìi',
        'users_advertising_id' => $ads_id,
        'type' => 'ads',
        'provider' => 'instagram',
        'fb_id' => $account_id,
        'error_type' => 6
    );
    $response1 = file_get_contents('https://gateway.golike.net/api/report/send', false, stream_context_create([
        'http' => [
            'method' => 'POST',
            'header' => buildHeaders($headers),
            'content' => json_encode($json_data1)
        ]
    ]));
    
    $json_data = array(
        'ads_id' => $ads_id,
        'object_id' => $object_id,
        'account_id' => $account_id,
        'type' => $loai
    );
    $response = file_get_contents('https://gateway.golike.net/api/advertising/publishers/instagram/skip-jobs', false, stream_context_create([
        'http' => [
            'method' => 'POST',
            'header' => buildHeaders($headers),
            'content' => json_encode($json_data)
        ]
    ]));
    return json_decode($response, true);
}

// H√†m h·ªó tr·ª£ x√¢y d·ª±ng headers
function buildHeaders($headers) {
    $headerString = "";
    foreach ($headers as $key => $value) {
        $headerString .= "$key: $value\r\n";
    }
    return $headerString;
}

function handle_follow_job($cookies, $object_id, $account_id) {
    try {
        // X·ª≠ l√Ω token an to√†n h∆°n
        $token = strpos($cookies, 'csrftoken=') !== false ? explode(';', explode('csrftoken=', $cookies)[1])[0] : null;

        $headers = [
            'authority: i.instagram.com',
            'accept: */*',
            'accept-language: vi,en-US;q=0.9,en;q=0.8',
            'content-type: application/x-www-form-urlencoded',
            'cookie: ' . $cookies,
            'origin: https://www.instagram.com',
            'referer: https://www.instagram.com/',
            'sec-ch-ua: "Chromium";v="106", "Google Chrome";v="106", "Not;A=Brand";v="99"',
            'sec-ch-ua-mobile: ?0',
            'sec-ch-ua-platform: "Windows"',
            'sec-fetch-dest: empty',
            'sec-fetch-mode: cors',
            'sec-fetch-site: same-site',
            'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36',
            'x-asbd-id: 198387',
            'x-csrftoken: ' . $token,
            'x-ig-app-id: 936619743392459',
            'x-ig-www-claim: hmac.AR1UYU8O8XCMl4jZdv4YxiRUxEIymCA_4stpgFmc092K1Kb2',
            'x-instagram-ajax: 1006309104',
        ];

        while (true) {
            try {
                $ch = curl_init();
                curl_setopt($ch, CURLOPT_URL, "https://i.instagram.com/api/v1/web/friendships/$object_id/follow/");
                curl_setopt($ch, CURLOPT_POST, true);
                curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
                curl_setopt($ch, CURLOPT_TIMEOUT, 10);
                
                $response = curl_exec($ch);
                $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
                curl_close($ch);
                
                $responsefl = json_decode($response, true);
                
                if (isset($responsefl['status']) && $responsefl['status'] == 'ok') {
                    echo "‚úÖ Follow th√†nh c√¥ng\r";
                    return 1;
                } else {
                    echo "‚ùå Follow th·∫•t b·∫°i: " . print_r($responsefl, true) . "\r";
                    return 0;
                }

            } catch (Exception $e) {
                echo "C√≥ l·ªói x·∫£y ra: " . $e->getMessage() . " - Th·ª≠ l·∫°i sau 5 gi√¢y...\r";
                sleep(5);
            }
        }

    } catch (Exception $e) {
        echo "L·ªói nghi√™m tr·ªçng: " . $e->getMessage() . "\n";
        return 0;
    }
}
function handle_like_job($cookies, $idlike, $link) {
    try {
        $token = explode(';', explode('csrftoken=', $cookies)[1])[0];
        $headers = [
            'authority: www.instagram.com',
            'accept: */*',
            'accept-language: vi,en-US;q=0.9,en;q=0.8',
            'content-type: application/x-www-form-urlencoded',
            'cookie: ' . $cookies,
            'origin: https://www.instagram.com',
            'referer: ' . $link,
            'sec-ch-ua: "Chromium";v="106", "Google Chrome";v="106", "Not;A=Brand";v="99"',
            'sec-ch-ua-mobile: ?0',
            'sec-ch-ua-platform: "Windows"',
            'sec-fetch-dest: empty',
            'sec-fetch-mode: cors',
            'sec-fetch-site: same-origin',
            'user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36',
            'x-asbd-id: 198387',
            'x-csrftoken: ' . $token,
        ];

        // G·ª≠i request like
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, "https://www.instagram.com/web/likes/$idlike/like/");
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        
        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);
        
        // Ki·ªÉm tra k·∫øt qu·∫£
        echo "Status Code: $httpCode\n";
        echo "Response: $response\n";
        
        if ($httpCode == 200) {
            if (strpos($response, 'status":"ok') !== false) {
                echo "‚úÖ Like th√†nh c√¥ng\r";
                return true;
            } else {
                echo "FAIL ‚ùå: $response\r";
                return false;
            }
        } elseif ($httpCode == 400 && strpos($response, 'Sorry, this photo has been deleted') !== false) {
            echo "PHOTO HAS BEEN DELETED ‚ùå\r";
            return false;
        } else {
            echo "ERROR ‚ùå: Status Code $httpCode\n";
            return false;
        }

    } catch (Exception $e) {
        echo "C√ì L·ªñI X·∫¢Y RA!!!: " . $e->getMessage() . "\n";
        return false;
    }
}

// L·∫•y danh s√°ch t√†i kho·∫£n Instagram
$chontk_Instagram = chonacc();

// Hi·ªÉn th·ªã danh s√°ch t√†i kho·∫£n
function dsacc() {
    global $chontk_Instagram;
    while (true) {
        try {
            if ($chontk_Instagram["status"] != 200) {
                rainbow_text( "Authorization ho·∫∑c T sai h√£y nh·∫≠p l·∫°i!!!\n");
                echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
                exit();
            }
            banner();
            echo "\n";
            echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
            rainbow_text( "Danh s√°ch acc : \n");
            echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
            for ($i = 0; $i < count($chontk_Instagram["data"]); $i++) {
                echo "\033[1;36m[".($i + 1)."] \033[1;97mID IG\033[1;32m :\033[1;93m ".$chontk_Instagram["data"][$i]["instagram_username"]." \033[1;97m|\033[1;31m :\033[1;32m ‚úîÔ∏è Ho·∫°t ƒê·ªông\n";
            }
            echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
            break;
        } catch (Exception $e) {
            echo "\033[1;32m".json_encode($chontk_Instagram)."\n";
            sleep(10);
        }
    }
}

// Hi·ªÉn th·ªã danh s√°ch t√†i kho·∫£n
dsacc();

// Ch·ªçn t√†i kho·∫£n Instagram
$d = 0;
while (true) {
    rainbow_text( "Nh·∫≠p ID Acc Instagram : ");
    $idacc = trim(fgets(STDIN));
    for ($i = 0; $i < count($chontk_Instagram["data"]); $i++) {
        if ($chontk_Instagram["data"][$i]["instagram_username"] == $idacc) {
            $d = 1;
            $account_id = $chontk_Instagram["data"][$i]["id"];
            break;
        }
    }
    if ($d == 0) {
        echo "\033[1;31mAcc n√†y ch∆∞a ƒë∆∞·ª£c th√™m v√†o golike ho·∫∑c id sai\n";
        continue;
    }
    break;
}

// Nh·∫≠p cookies
banner();
echo "\n";
echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
// In menu l·ª±a ch·ªçn
// Hi·ªÉn th·ªã menu
echo "\033[1;32mNh·∫≠p \033[1;31m[\033[1;33m1\033[1;31m]\033[1;32m S·ª≠ D·ª•ng Cookie IG ƒê√£ L∆∞u\n"; 
echo "\033[1;32mNh·∫≠p \033[1;31m[\033[1;33m2\033[1;31m]\033[1;32m Nh·∫≠p Cookie IG M·ªõi\n";

// V√≤ng l·∫∑p x·ª≠ l√Ω l·ª±a ch·ªçn
while (true) {
    echo "\033[1;32mNh·∫≠p L·ª±a Ch·ªçn (1 ho·∫∑c 2): ";
    $choose = trim(fgets(STDIN));
    if (!is_numeric($choose) || ($choose != 1 && $choose != 2)) {
        echo "\033[1;31m\n‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p 1 ho·∫∑c 2.\n";
        continue;
    }
    $choose = intval($choose);
    break;
}

// X√≥a cookies n·∫øu ch·ªçn 2
if ($choose == 2) {
    $cookies = "Cookies_IG.txt";
    if (file_exists($cookies)) {
        if (unlink($cookies)) {
            echo "\033[1;32m[‚úî] ƒê√£ x√≥a $cookies!\n";
        } else {
            $error = error_get_last();
            echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ x√≥a $cookies! L√Ω do: " . $error['message'] . "\n";
        }
    } else {
        echo "\033[1;33m[!] File $cookies kh√¥ng t·ªìn t·∫°i!\n";
    }
    echo "\033[1;33müëâ Vui l√≤ng nh·∫≠p l·∫°i th√¥ng tin!\n";
}

// Ki·ªÉm tra v√† t·∫°o file
$file = "cookies_IG.txt";
if (!file_exists($file)) {
    if (!is_writable(dirname($file))) {
        echo "\033[1;31m[‚úñ] Kh√¥ng c√≥ quy·ªÅn ghi v√†o th∆∞ m·ª•c ch·ª©a $file!\n";
        exit(1);
    }
    if (file_put_contents($file, "") === false) {
        $error = error_get_last();
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ t·∫°o file $file! L√Ω do: " . $error['message'] . "\n";
        exit(1);
    }
}

// ƒê·ªçc th√¥ng tin t·ª´ file
$cookies = "";
if (file_exists($file)) {
    $cookies = file_get_contents($file);
    if ($cookies === false) {
        $error = error_get_last();
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ ƒë·ªçc file $file! L√Ω do: " . $error['message'] . "\n";
        exit(1);
    }
    $cookies = trim($cookies);
}

// Y√™u c·∫ßu nh·∫≠p l·∫°i n·∫øu cookies tr·ªëng
while (empty($cookies)) {
    echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
    echo "\033[1;32mNh·∫≠p Cookie M·ªõi : ";
    $cookies = trim(fgets(STDIN));
    if (strtolower($cookies) === 'exit') {
        echo "\033[1;33m[!] ƒê√£ tho√°t ch∆∞∆°ng tr√¨nh.\n";
        exit(0);
    }
    if (!is_writable(dirname($file))) {
        echo "\033[1;31m[‚úñ] Kh√¥ng c√≥ quy·ªÅn ghi v√†o th∆∞ m·ª•c ch·ª©a $file!\n";
        exit(1);
    }
    if (file_put_contents($file, $cookies) === false) {
        $error = error_get_last();
        echo "\033[1;31m[‚úñ] Kh√¥ng th·ªÉ ghi v√†o file $file! L√Ω do: " . $error['message'] . "\n";
        exit(1);
    }
}
// Nh·∫≠p th·ªùi gian l√†m job
while (true) {
    try {
        echo "\033[1;32mNh·∫≠p delay : ";
        $delay = intval(trim(fgets(STDIN)));
        break;
    } catch (Exception $e) {
        echo "\033[1;31mSai ƒë·ªãnh d·∫°ng!!!\n";
    }
}

// Nh·∫≠n ti·ªÅn l·∫ßn 2 n·∫øu l·∫ßn 1 fail
while (true) {
    try {
        echo "\033[1;32mNh·∫≠n ti·ªÅn l·∫ßn 2 n·∫øu l·∫ßn 1 fail? (y/n): ";
        $lannhan = trim(fgets(STDIN));
        if ($lannhan != "y" && $lannhan != "n") {
            echo "\033[1;31mNh·∫≠p sai h√£y nh·∫≠p l·∫°i!!!\n";
            continue;
        }
        break;
    } catch (Exception $e) {
        // B·ªè qua
    }
}

// Nh·∫≠p s·ªë job fail ƒë·ªÉ ƒë·ªïi acc Instagram
while (true) {
    try {
        echo "\033[1;32mS·ªë job fail ƒë·ªÉ ƒë·ªïi acc Instagram (nh·∫≠p 1 n·∫øu k mu·ªën d·ª´ng) : ";
        $doiacc = intval(trim(fgets(STDIN)));
        break;
    } catch (Exception $e) {
        echo "\033[1;31mNh·∫≠p v√†o 1 s·ªë!!!\n";
    }
}

// Ch·ªçn ch·∫ø ƒë·ªô l√†m vi·ªác
while (true) {
    try {
        echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
        echo "\033[1;32mNh·∫≠p 1 : \033[1;33mFollow\n";
        echo "\033[1;32mNh·∫≠p 2 : \033[1;33mLike\n";
        echo "\033[1;32mNh·∫≠p 3 : \033[1;33mFollow + Like\n";
        echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
        echo "\033[1;32mNh·∫≠p l·ª±a ch·ªçn: ";
        $chedo = intval(trim(fgets(STDIN)));
        
        if ($chedo == 1 || $chedo == 2 || $chedo == 3) {
            break;
        } else {
            echo "\033[1;31mCh·ªâ ƒë∆∞·ª£c nh·∫≠p 1, 2, 3!\n";
        }
    } catch (Exception $e) {
        echo "\033[1;31mNh·∫≠p v√†o 1 s·ªë!!!\n";
    }
}

// X√°c ƒë·ªãnh lo·∫°i nhi·ªám v·ª•
$lam = array();
if ($chedo == 1) {
    $lam = array("follow");
} elseif ($chedo == 2) {
    $lam = array("like");
} elseif ($chedo == 3) {
    $lam = array("follow", "like");
}

// B·∫Øt ƒë·∫ßu l√†m nhi·ªám v·ª•
$dem = 0;
$tong = 0;
$checkdoiacc = 0;
$checkdoiacc1 = 0;
$dsaccloi = array();
$accloi = "";
banner();
while (true) {
    if ($checkdoiacc == $doiacc) {
        dsacc();
        $idacc = readline("\033[1;31mJob fail ƒë√£ ƒë·∫°t gi·ªõi h·∫°n n√™n nh·∫≠p id acc kh√°c ƒë·ªÉ ƒë·ªïi: ");
        sleep(2);
        banner();
        echo "\n";
        echo "\033[1;97m‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n";
        $d = 0;
        for ($i = 0; $i < count($chontk_Instagram["data"]); $i++) {
            if ($chontk_Instagram["data"][$i]["instagram_username"] == $idacc) {
                $d = 1;
                $account_id = $chontk_Instagram["data"][$i]["id"];
                break;
            }
        }
        if ($d == 0) {
            echo "\033[1;31mAcc ch∆∞a th√™m v√†o Golike ho·∫∑c ID kh√¥ng ƒë√∫ng!\n";
            continue;
        }
        $checkdoiacc = 0;
    }

    echo "\033[1;35mƒêang T√¨m Job                  \r";
    while (true) {
        try {
            $nhanjob = nhannv($account_id);
            break;
        } catch (Exception $e) {
            // pass
        }
    }

    if (isset($nhanjob["status"]) && $nhanjob["status"] == 200) {
        $ads_id = $nhanjob["data"]["id"];
        $link = $nhanjob["data"]["link"];
        $object_id = $nhanjob["data"]["object_id"];
        $loai = $nhanjob["data"]["type"];
        // $media_id = $nhanjob["data"]["object_data"]["pk"];
        // echo $media_id;

        if (!in_array($nhanjob["data"]["type"], $lam)) {
            try {
                baoloi($ads_id, $object_id, $account_id, $nhanjob["data"]["type"]);
                echo "\033[1;31mƒê√£ b·ªè qua job {$loai}!        \r";
                sleep(1);
                continue;
            } catch (Exception $e) {
                // pass
            }
        }

        $success = false;
        if ($loai == "follow") {
            $success = handle_follow_job($cookies, $object_id, $account_id);
        } elseif ($loai == "like") {
            $media_id = $nhanjob["data"]["object_data"]["pk"];

            $success = handle_like_job($cookies, $media_id, $link);
        }
        
        for ($remaining_time = $delay; $remaining_time >= 0; $remaining_time--) {
            $colors = array(
                "\033[1;37mP\033[1;36mh\033[1;35mu\033[1;32mo\033[1;31mc \033[1;34mA\033[1;33mn\033[1;36m - Tool\033[1;36m Vip \033[1;31müíª\033[1;32m",
                "\033[1;34mP\033[1;31mh\033[1;37mu\033[1;36mo\033[1;32mc \033[1;35mA\033[1;37mn\033[1;32m - Tool\033[1;34m Vip \033[1;31müíª\033[1;32m",
                "\033[1;31mP\033[1;37mh\033[1;36mu\033[1;33mo\033[1;35mc \033[1;32mA\033[1;34mn\033[1;37m - Tool\033[1;33m Vip \033[1;31müíª\033[1;32m",
                "\033[1;32mP\033[1;31mh\033[1;33mu\033[1;35mo\033[1;34mc \033[1;36mA\033[1;39mn\033[1;36m - Tool\033[1;31m Vip \033[1;31müíª\033[1;32m",
            );
            foreach ($colors as $color) {
                echo "\r{$color}|{$remaining_time}| \033[1;31m";
                usleep(1200);
            }
        }

        echo "\r                          \r";
        echo "\033[1;35mƒêang Nh·∫≠n Ti·ªÅn...        \r";
        while (true) {
            try {
                $nhantien = hoanthanh($ads_id, $account_id);
                break;
            } catch (Exception $e) {
                // pass
            }
        }

        if ($lannhan == "y") {
            $checklan = 1;
        } else {
            $checklan = 2;
        }

        $ok = 0;
        while ($checklan <= 2) {
            if (isset($nhantien["status"]) && $nhantien["status"] == 200) {
                $ok = 1;
                $dem++;
                $tien = $nhantien["data"]["prices"];
                $tong += $tien;
                $local_time = getdate();
                $hour = $local_time["hours"];
                $minute = $local_time["minutes"];
                $second = $local_time["seconds"];
                $h = $hour;
                $m = $minute;
                $s = $second;
                if ($hour < 10) {
                    $h = "0" . $hour;
                }
                if ($minute < 10) {
                    $m = "0" . $minute;
                }
                if ($second < 10) {
                    $s = "0" . $second;
                }
                echo "                                                    \r";
                $chuoi = ("\033[1;31m| \033[1;33m{$dem} \033[1;31m| \033[1;36m{$h}:{$m}:{$s} \033[1;31m| \033[1;32mSUCCESS \033[1;31m| \033[1;34m{$nhantien['data']['type']} \033[1;31m| \033[1;35m+{$tien}ƒë \033[1;31m| \033[1;39m{$tong}ƒë");
                echo $chuoi . "\n";
                $checkdoiacc = 0;
                break;
            } else {
                $checklan++;
                if ($checklan == 3) {
                    break;
                }
                echo "\033[1;97m[\033[1;91m‚ù£\033[1;97m] \033[1;36m‚úà \033[1;35mƒêang Nh·∫≠n Ti·ªÅn L·∫ßn 2:>        \r";
                $nhantien = hoanthanh($ads_id, $account_id);
            }
        }

        if ($ok != 1) {
            while (true) {
                try {
                    baoloi($ads_id, $object_id, $account_id, $nhanjob["data"]["type"]);
                    echo "\033[1;97m[\033[1;91m‚ù£\033[1;97m] \033[1;36m‚úà \033[1;31mƒê√£ b·ªè qua job:>        \r";
                    sleep(1);
                    $checkdoiacc++;
                    break;
                } catch (Exception $e) {
                    $qua = 0;
                    // pass
                }
            }
        }

    } else {
        sleep(10);
    }
}

?>

